<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
        "http://struts.apache.org/dtds/struts-2.3.dtd">
<struts>
    <constant name="struts.action.extension" value="," />
    <constant name="struts.patternMatcher" value="restfulPatternMatcher" />
    <constant name="struts.enable.SlashesInActionNames" value="true" />
    <constant name="struts.mapper.alwaysSelectFullNamespace" value="false" />
    <constant name="struts.mapper.class" value="de.nak.exammgmt.util.struts.Restful3ActionMapper" />
    <constant name="struts.action.excludePattern" value="/static/.*" />
    <constant name="struts.enable.DynamicMethodInvocation" value="true" />

    <bean type="com.opensymphony.xwork2.util.PatternMatcher" name="restfulPatternMatcher" class="de.nak.exammgmt.util.struts.RestfulPatternMatcher" />
    <bean type="com.opensymphony.xwork2.UnknownHandler" name="restUnknownHandler" class="de.nak.exammgmt.util.struts.RestUnknownHandler" />
    <bean type="de.nak.exammgmt.util.struts.thymeleaf.TemplateEngineProvider" class="de.nak.exammgmt.util.struts.thymeleaf.DefaultTemplateEngineProvider" />

    <package name="default" extends="struts-default">

        <result-types>
            <result-type name="thymeleaf" class="de.nak.exammgmt.util.struts.thymeleaf.ThymeleafResult" />
        </result-types>

        <interceptors>

            <interceptor name="authorization" class="de.nak.exammgmt.presentation.action.interceptor.AuthorizationInterceptor" />
            <interceptor name="authentication" class="de.nak.exammgmt.presentation.action.interceptor.AuthenticationInterceptor" />
            <interceptor name="pjax" class="de.nak.exammgmt.presentation.action.interceptor.PjaxInterceptor" />

            <interceptor-stack name="authStack">
                <interceptor-ref name="defaultStack">
                    <param name="validation.excludeMethods">
                        input,back,cancel,browse,index,show,edit,editNew
                    </param>
                    <param name="workflow.excludeMethods">
                        input,back,cancel,browse,index,show,edit,editNew
                    </param>
                </interceptor-ref>
                <interceptor-ref name="createSession" />
                <interceptor-ref name="store">
                    <param name="operationMode">AUTOMATIC</param>
                </interceptor-ref>
                <interceptor-ref name="pjax" />
                <interceptor-ref name="authentication" />
                <interceptor-ref name="authorization" />
            </interceptor-stack>

        </interceptors>

        <default-interceptor-ref name="authStack" />

        <global-results>
            <result name="login" type="redirectAction">
                <param name="actionName">login</param>
                <param name="returnTo">${returnTo}</param>
                <param name="suppressEmptyParameters">true</param>
            </result>

            <result name="error" type="thymeleaf">error</result>

            <result name="404" type="httpheader">
                <param name="error">404</param>
            </result>

            <result name="redirect_welcome" type="redirect">/</result>

            <!-- TODO: Remove for production -->
            <result name="redirect_reset_database" type="redirectAction">reset_database</result>
        </global-results>

        <global-exception-mappings>
            <exception-mapping exception="de.nak.exammgmt.service.exception.NotFoundException" result="404" />
            <!-- TODO: Remove for production -->
            <exception-mapping exception="de.nak.exammgmt.service.exception.DatabaseInvalidException" result="redirect_reset_database" />
            <!-- todo insert <exception-mapping exception="java.lang.Exception" result="error" /> -->
        </global-exception-mappings>

    </package>

    <package name="public" extends="default">

        <action name="welcome" class="de.nak.exammgmt.presentation.action.WelcomeAction" method="execute">
            <result name="admin" type="thymeleaf">welcome/admin</result>
            <result name="student" type="chain">
                <param name="actionName">student/</param>
                <param name="method">personalGrades</param>
            </result>
            <result name="lecturer" type="thymeleaf">welcome/lecturer</result>
            <result name="management" type="thymeleaf">welcome/management</result>
        </action>

        <action name="error404" method="execute">
            <result type="thymeleaf">404</result>
        </action>

        <action name="login" class="de.nak.exammgmt.presentation.action.LoginAction">
            <param name="get">show</param>
            <param name="post">login</param>

            <result name="return_to" type="redirect">${returnTo}</result>
            <result name="input" type="thymeleaf">login</result>
        </action>

        <action name="logout" class="de.nak.exammgmt.presentation.action.LoginAction" method="logout">
        </action>

        <action name="activate/{token}" class="de.nak.exammgmt.presentation.action.ActivationAction">
            <result name="input" type="thymeleaf">activation/change_pw</result>
        </action>

        <action name="user/{userId}?" class="de.nak.exammgmt.presentation.action.UserAction">
            <result name="create" type="redirectAction">${"users/" + userId}</result>
            <result name="new" type="thymeleaf">user/new :: #form-create-user</result>
            <result name="index" type="thymeleaf">user/index</result>
        </action>

        <action name="profile/" class="de.nak.exammgmt.presentation.action.UserAction" method="profile">
            <result name="show" type="thymeleaf">user/show</result>
        </action>

        <action name="profile/security/{userSessionId}?" class="de.nak.exammgmt.presentation.action.UserSessionsAction">
            <result name="index" type="thymeleaf">user/user_sessions</result>
        </action>

        <action name="password_reset/{token}?" class="de.nak.exammgmt.presentation.action.PasswordResetAction">
            <result name="index" type="thymeleaf">passwordReset/init</result>
            <result name="input" type="thymeleaf">passwordReset/change_pw</result>
        </action>

        <action name="exam/{examId}/grades" class="de.nak.exammgmt.presentation.action.BatchAction">
            <param name="get">show</param>
            <param name="post">create</param>

            <result name="new" type="thymeleaf">exam/batch</result>
            <result name="create" type="thymeleaf">exam/batch_protocol</result>
        </action>

        <action name="exam/{examId}/reexamination" class="de.nak.exammgmt.presentation.action.BatchAction">
            <param name="get">show</param>
            <param name="post">create</param>

            <param name="reexamination">true</param>

            <result name="new" type="thymeleaf">exam/batch</result>
            <result name="create" type="redirectAction">${"exam/" + examId}</result>
        </action>

        <action name="exam/{examId}?" class="de.nak.exammgmt.presentation.action.ExamAction">
            <result name="new" type="thymeleaf">exam/new</result>
        </action>

        <action name="student/{studentId}?" class="de.nak.exammgmt.presentation.action.StudentAction">
            <param name="nested">true</param>

            <result name="show_grades" type="thymeleaf">student/grades</result>
            <result name="show_course_grade" type="thymeleaf">student/course_grade</result>
        </action>
        
        <action name="course/{courseId}?" class="de.nak.exammgmt.presentation.action.CourseAction">
            <result name="show" type="thymeleaf">course/grades</result>
        </action>

        <action name="maniple/{manipleId}?" class="de.nak.exammgmt.presentation.action.ManipleAction">
            <result name="index" type="thymeleaf">maniple/index</result>
            <result name="show" type="thymeleaf">maniple/grades</result>
            <result name="show_pjax" type="thymeleaf">maniple/grades :: grade-overview</result>
        </action>

        <action name="performance/{examPerformanceId}?" class="de.nak.exammgmt.presentation.action.ExamPerformanceAction">
            <result name="update" type="redirectAction">${returnTo}</result>
            <result name="remove" type="redirectAction">${returnTo}</result>
        </action>

    </package>

    <!-- TODO: DANGEROUS!!! Remove package for production -->
    <package name="reset" extends="default">
        <default-interceptor-ref name="defaultStack" />

        <action name="reset_database" class="de.nak.exammgmt.presentation.action.ResetDatabaseAction">
            <param name="get">show</param>
            <param name="post">reset</param>

            <param name="password">resetDB</param>

            <result name="success" type="thymeleaf">reset_database</result>
        </action>
    </package>

</struts>